'use client'

import { useState } from 'react'
import { useSelector } from 'react-redux'
import { RootState } from '@/store'
import { Popup } from 'antd-mobile'

export default function WalletPage() {
  const userState = useSelector((state: RootState) => state.user)
  const spinWheelState = useSelector((state: RootState) => state.spinWheel)
  
  const [showDepositPopup, setShowDepositPopup] = useState(false)
  const [selectedMethod, setSelectedMethod] = useState('')
  const [depositAmount, setDepositAmount] = useState('')
  const [accountNumber, setAccountNumber] = useState('')
  const [transactionId, setTransactionId] = useState('')

  const handleDeposit = () => {
    setShowDepositPopup(true)
  }

  const handleDepositSubmit = () => {
    // TODO: Submit deposit request to API
    console.log('Deposit submitted:', { selectedMethod, depositAmount, accountNumber, transactionId })
    setShowDepositPopup(false)
    // Reset form
    setSelectedMethod('')
    setDepositAmount('')
    setAccountNumber('')
    setTransactionId('')
  }

  const handleWithdraw = () => {
    // Navigate to withdraw page
    window.location.href = '/withdraw'
  }

  return (
    <div className="min-h-screen bg-gray-50 dark:bg-gray-900 pb-24">
     
      {/* Assets Section */}
      <div className="max-w-4xl mx-auto px-4 py-6">
        <div className="space-y-4">
            {/* Assets List */}
            <div className="bg-white dark:bg-gray-800 rounded-xl shadow-sm overflow-hidden">
              {/* Header with Actions */}
              <div className="px-4 py-4 border-b border-gray-200 dark:border-gray-700">
                <div className="flex items-center justify-between">
                  <h2 className="text-lg font-bold text-gray-900 dark:text-white">My Assets</h2>
                  <div className="flex gap-2">
                    <button
                      onClick={handleDeposit}
                      className="px-4 py-2 bg-gradient-to-r from-green-500 to-emerald-600 text-white rounded-lg font-semibold hover:shadow-lg transition-all duration-200 flex items-center gap-2"
                    >
                      <i className="fas fa-plus-circle"></i>
                      <span>Deposit</span>
                    </button>
                    <button
                      onClick={handleWithdraw}
                      className="px-4 py-2 bg-gradient-to-r from-blue-500 to-indigo-600 text-white rounded-lg font-semibold hover:shadow-lg transition-all duration-200 flex items-center gap-2"
                    >
                      <i className="fas fa-arrow-circle-up"></i>
                      <span>Withdraw</span>
                    </button>
                  </div>
                </div>
              </div>

              {/* Asset Items */}
              <div className="divide-y divide-gray-200 dark:divide-gray-700">
                {/* USDT */}
                <div className="px-4 py-4">
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-3">
                      <div className="w-10 h-10 rounded-full bg-green-100 dark:bg-green-900 flex items-center justify-center">
                        <i className="fas fa-dollar-sign text-green-600 dark:text-green-400"></i>
                      </div>
                      <div>
                        <p className="font-semibold text-gray-900 dark:text-white">USDT</p>
                        <p className="text-xs text-gray-500 dark:text-gray-400">Tether USD</p>
                      </div>
                    </div>
                    <div className="text-right">
                      <p className="font-bold text-gray-900 dark:text-white">{(userState.balanceTK || 0).toFixed(2)}</p>
                      <p className="text-xs text-gray-500 dark:text-gray-400">â‰ˆ ${(userState.balanceTK || 0).toFixed(2)}</p>
                    </div>
                  </div>
                </div>

                {/* XP */}
                <div className="px-4 py-4 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-3">
                      <div className="w-10 h-10 rounded-full bg-purple-100 dark:bg-purple-900 flex items-center justify-center">
                        <i className="fas fa-star text-purple-600 dark:text-purple-400"></i>
                      </div>
                      <div>
                        <p className="font-semibold text-gray-900 dark:text-white">XP</p>
                        <p className="text-xs text-gray-500 dark:text-gray-400">Experience Points</p>
                      </div>
                    </div>
                    <div className="text-right">
                      <p className="font-bold text-gray-900 dark:text-white">{userState.xp || 0}</p>
                      <p className="text-xs text-gray-500 dark:text-gray-400">Points</p>
                    </div>
                  </div>
                </div>

                {/* Spin Tickets */}
                <div className="px-4 py-4 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-3">
                      <div className="w-10 h-10 rounded-full bg-yellow-100 dark:bg-yellow-900 flex items-center justify-center">
                        <i className="fas fa-ticket-alt text-yellow-600 dark:text-yellow-400"></i>
                      </div>
                      <div>
                        <p className="font-semibold text-gray-900 dark:text-white">Spin Tickets</p>
                        <p className="text-xs text-gray-500 dark:text-gray-400">Lottery Tickets</p>
                      </div>
                    </div>
                    <div className="text-right">
                      <p className="font-bold text-gray-900 dark:text-white">{spinWheelState.spinTickets || 0}</p>
                      <p className="text-xs text-gray-500 dark:text-gray-400">Tickets</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
      </div>

      {/* Deposit Popup */}
      <Popup
        visible={showDepositPopup}
        onMaskClick={() => setShowDepositPopup(false)}
        onClose={() => setShowDepositPopup(false)}
        position="bottom"
        bodyStyle={{
          borderTopLeftRadius: '20px',
          borderTopRightRadius: '20px',
          backgroundColor: 'transparent',
        }}
      >
        <div className="bg-white dark:bg-gray-900 max-h-[85vh] overflow-y-auto">
          {/* Header */}
          <div className="px-4 pt-4 pb-3 border-b border-gray-100 dark:border-gray-800 sticky top-0 bg-white dark:bg-gray-900 z-10">
            <div className="flex items-center justify-between">
              <h3 className="text-lg font-bold text-gray-900 dark:text-white">Deposit Funds</h3>
              <button
                onClick={() => setShowDepositPopup(false)}
                className="w-8 h-8 rounded-full bg-gray-100 dark:bg-gray-800 flex items-center justify-center active:bg-gray-200 dark:active:bg-gray-700 transition-colors"
              >
                <i className="fas fa-times text-gray-500 dark:text-gray-400"></i>
              </button>
            </div>
          </div>

          {/* Content */}
          <div className="p-4 space-y-4">
            {/* Payment Method Selection */}
            <div>
              <label className="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2">
                Select Payment Method
              </label>
              <div className="grid grid-cols-2 gap-2">
                {/* bKash */}
                <button
                  onClick={() => setSelectedMethod('bkash')}
                  className={`p-3 rounded-lg border-2 transition-all ${
                    selectedMethod === 'bkash'
                      ? 'border-pink-500 bg-pink-50 dark:bg-pink-900/20'
                      : 'border-gray-200 dark:border-gray-700 hover:border-pink-300'
                  }`}
                >
                  <div className="flex items-center gap-2">
                    <div className="w-8 h-8 rounded-lg bg-pink-500 flex items-center justify-center">
                      <i className="fas fa-mobile-alt text-white text-sm"></i>
                    </div>
                    <span className="font-semibold text-gray-900 dark:text-white">bKash</span>
                  </div>
                </button>

                {/* Nagad */}
                <button
                  onClick={() => setSelectedMethod('nagad')}
                  className={`p-3 rounded-lg border-2 transition-all ${
                    selectedMethod === 'nagad'
                      ? 'border-orange-500 bg-orange-50 dark:bg-orange-900/20'
                      : 'border-gray-200 dark:border-gray-700 hover:border-orange-300'
                  }`}
                >
                  <div className="flex items-center gap-2">
                    <div className="w-8 h-8 rounded-lg bg-orange-500 flex items-center justify-center">
                      <i className="fas fa-wallet text-white text-sm"></i>
                    </div>
                    <span className="font-semibold text-gray-900 dark:text-white">Nagad</span>
                  </div>
                </button>

                {/* Rocket */}
                <button
                  onClick={() => setSelectedMethod('rocket')}
                  className={`p-3 rounded-lg border-2 transition-all ${
                    selectedMethod === 'rocket'
                      ? 'border-purple-500 bg-purple-50 dark:bg-purple-900/20'
                      : 'border-gray-200 dark:border-gray-700 hover:border-purple-300'
                  }`}
                >
                  <div className="flex items-center gap-2">
                    <div className="w-8 h-8 rounded-lg bg-purple-500 flex items-center justify-center">
                      <i className="fas fa-rocket text-white text-sm"></i>
                    </div>
                    <span className="font-semibold text-gray-900 dark:text-white">Rocket</span>
                  </div>
                </button>

                {/* Bank Transfer */}
                <button
                  onClick={() => setSelectedMethod('bank')}
                  className={`p-3 rounded-lg border-2 transition-all ${
                    selectedMethod === 'bank'
                      ? 'border-blue-500 bg-blue-50 dark:bg-blue-900/20'
                      : 'border-gray-200 dark:border-gray-700 hover:border-blue-300'
                  }`}
                >
                  <div className="flex items-center gap-2">
                    <div className="w-8 h-8 rounded-lg bg-blue-500 flex items-center justify-center">
                      <i className="fas fa-university text-white text-sm"></i>
                    </div>
                    <span className="font-semibold text-gray-900 dark:text-white">Bank</span>
                  </div>
                </button>
              </div>
            </div>

            {/* Deposit Form */}
            {selectedMethod && (
              <>
                {/* Amount */}
                <div>
                  <label className="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2">
                    Deposit Amount (USDT)
                  </label>
                  <input
                    type="number"
                    value={depositAmount}
                    onChange={(e) => setDepositAmount(e.target.value)}
                    placeholder="Enter amount"
                    className="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-green-500 focus:border-transparent"
                  />
                </div>

                {/* Account Number */}
                <div>
                  <label className="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2">
                    Your {selectedMethod.toUpperCase()} Number
                  </label>
                  <input
                    type="text"
                    value={accountNumber}
                    onChange={(e) => setAccountNumber(e.target.value)}
                    placeholder="Enter your account number"
                    className="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-green-500 focus:border-transparent"
                  />
                </div>

                {/* Transaction ID */}
                <div>
                  <label className="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2">
                    Transaction ID
                  </label>
                  <input
                    type="text"
                    value={transactionId}
                    onChange={(e) => setTransactionId(e.target.value)}
                    placeholder="Enter transaction ID"
                    className="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-green-500 focus:border-transparent"
                  />
                </div>

                {/* Instructions */}
                <div className="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-3">
                  <div className="flex gap-2">
                    <i className="fas fa-info-circle text-blue-500 mt-0.5"></i>
                    <div className="text-xs text-blue-700 dark:text-blue-300">
                      <p className="font-semibold mb-1">Instructions:</p>
                      <ol className="list-decimal list-inside space-y-1">
                        <li>Send money to our {selectedMethod.toUpperCase()} account</li>
                        <li>Enter the transaction details above</li>
                        <li>Wait for admin approval (usually within 24 hours)</li>
                      </ol>
                    </div>
                  </div>
                </div>

                {/* Submit Button */}
                <button
                  onClick={handleDepositSubmit}
                  disabled={!depositAmount || !accountNumber || !transactionId}
                  className="w-full py-3 bg-gradient-to-r from-green-500 to-emerald-600 text-white font-bold rounded-lg hover:shadow-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  Submit Deposit Request
                </button>
              </>
            )}
          </div>

          {/* Safe Area Bottom Padding */}
          <div className="h-4"></div>
        </div>
      </Popup>
    </div>
  )
}
